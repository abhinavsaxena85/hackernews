// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comment test suite <Header/> should render with props(snapshot) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    commentData={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <span
          className="home-logo"
        >
          <Link
            onClick={[Function]}
            replace={false}
            to="/"
          >
            Y
          </Link>
        </span>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "black",
            }
          }
          to="/news/top"
        >
          top
        </Link>
        <label>
          |
        </label>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "black",
            }
          }
          to="/news/new"
        >
          new
        </Link>
      </div>,
      "className": "row header-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/top"
          >
            top
          </Link>,
          <label>
            |
          </label>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/new"
          >
            new
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>,
            "className": "home-logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Y",
              "onClick": [Function],
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Y",
            "type": [Function],
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "top",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "black",
            },
            "to": "/news/top",
          },
          "ref": null,
          "rendered": "top",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "|",
          },
          "ref": null,
          "rendered": "|",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "new",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "black",
            },
            "to": "/news/new",
          },
          "ref": null,
          "rendered": "new",
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/top"
          >
            top
          </Link>
          <label>
            |
          </label>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/new"
          >
            new
          </Link>
        </div>,
        "className": "row header-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="home-logo"
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>
            </span>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "black",
                }
              }
              to="/news/top"
            >
              top
            </Link>,
            <label>
              |
            </label>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "black",
                }
              }
              to="/news/new"
            >
              new
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>,
              "className": "home-logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Y",
                "onClick": [Function],
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Y",
              "type": [Function],
            },
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "top",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "black",
              },
              "to": "/news/top",
            },
            "ref": null,
            "rendered": "top",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "|",
            },
            "ref": null,
            "rendered": "|",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "new",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "black",
              },
              "to": "/news/new",
            },
            "ref": null,
            "rendered": "new",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Comment test suite <Header/> should render with state new as seelcted 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    commentData={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <span
          className="home-logo"
        >
          <Link
            onClick={[Function]}
            replace={false}
            to="/"
          >
            Y
          </Link>
        </span>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "black",
            }
          }
          to="/news/top"
        >
          top
        </Link>
        <label>
          |
        </label>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "white",
            }
          }
          to="/news/new"
        >
          new
        </Link>
      </div>,
      "className": "row header-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/top"
          >
            top
          </Link>,
          <label>
            |
          </label>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "white",
              }
            }
            to="/news/new"
          >
            new
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>,
            "className": "home-logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Y",
              "onClick": [Function],
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Y",
            "type": [Function],
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "top",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "black",
            },
            "to": "/news/top",
          },
          "ref": null,
          "rendered": "top",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "|",
          },
          "ref": null,
          "rendered": "|",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "new",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "white",
            },
            "to": "/news/new",
          },
          "ref": null,
          "rendered": "new",
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/top"
          >
            top
          </Link>
          <label>
            |
          </label>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "white",
              }
            }
            to="/news/new"
          >
            new
          </Link>
        </div>,
        "className": "row header-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="home-logo"
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>
            </span>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "black",
                }
              }
              to="/news/top"
            >
              top
            </Link>,
            <label>
              |
            </label>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "white",
                }
              }
              to="/news/new"
            >
              new
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>,
              "className": "home-logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Y",
                "onClick": [Function],
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Y",
              "type": [Function],
            },
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "top",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "black",
              },
              "to": "/news/top",
            },
            "ref": null,
            "rendered": "top",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "|",
            },
            "ref": null,
            "rendered": "|",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "new",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "white",
              },
              "to": "/news/new",
            },
            "ref": null,
            "rendered": "new",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Comment test suite <Header/> should render with state top as seelcted 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    commentData={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <span
          className="home-logo"
        >
          <Link
            onClick={[Function]}
            replace={false}
            to="/"
          >
            Y
          </Link>
        </span>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "white",
            }
          }
          to="/news/top"
        >
          top
        </Link>
        <label>
          |
        </label>
        <Link
          onClick={[Function]}
          replace={false}
          style={
            Object {
              "color": "black",
            }
          }
          to="/news/new"
        >
          new
        </Link>
      </div>,
      "className": "row header-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "white",
              }
            }
            to="/news/top"
          >
            top
          </Link>,
          <label>
            |
          </label>,
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/new"
          >
            new
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>,
            "className": "home-logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Y",
              "onClick": [Function],
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Y",
            "type": [Function],
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "top",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "white",
            },
            "to": "/news/top",
          },
          "ref": null,
          "rendered": "top",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "|",
          },
          "ref": null,
          "rendered": "|",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "new",
            "onClick": [Function],
            "replace": false,
            "style": Object {
              "color": "black",
            },
            "to": "/news/new",
          },
          "ref": null,
          "rendered": "new",
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <span
            className="home-logo"
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Y
            </Link>
          </span>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "white",
              }
            }
            to="/news/top"
          >
            top
          </Link>
          <label>
            |
          </label>
          <Link
            onClick={[Function]}
            replace={false}
            style={
              Object {
                "color": "black",
              }
            }
            to="/news/new"
          >
            new
          </Link>
        </div>,
        "className": "row header-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="home-logo"
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>
            </span>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "white",
                }
              }
              to="/news/top"
            >
              top
            </Link>,
            <label>
              |
            </label>,
            <Link
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "color": "black",
                }
              }
              to="/news/new"
            >
              new
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Y
              </Link>,
              "className": "home-logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Y",
                "onClick": [Function],
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Y",
              "type": [Function],
            },
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "top",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "white",
              },
              "to": "/news/top",
            },
            "ref": null,
            "rendered": "top",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "|",
            },
            "ref": null,
            "rendered": "|",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "new",
              "onClick": [Function],
              "replace": false,
              "style": Object {
                "color": "black",
              },
              "to": "/news/new",
            },
            "ref": null,
            "rendered": "new",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
